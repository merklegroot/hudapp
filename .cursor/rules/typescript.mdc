---
alwaysApply: false
---

# TypeScript Code Style Rules

## Early Return Pattern
- When an `if` block ends with a `return` statement, do NOT follow it with `else` or `else if` blocks
- Use early returns to reduce nesting and improve readability

### Example of what NOT to do:
```typescript
if (condition) {
  return value;
} else {
  // This else is unnecessary
  return otherValue;
}
```

### Example of what TO do:
```typescript
if (condition) {
  return value;
}
// No else needed - code naturally continues here
return otherValue;
```

## General Guidelines
- Prefer guard clauses and early returns over nested conditionals
- Reduce indentation levels by returning early when conditions are not met
- Make code more linear and easier to follow by eliminating unnecessary else blocks
# TypeScript Code Style Rules

## Early Return Pattern
- When an `if` block ends with a `return` statement, do NOT follow it with `else` or `else if` blocks
- Use early returns to reduce nesting and improve readability

### Example of what NOT to do:
```typescript
if (condition) {
  return value;
} else {
  // This else is unnecessary
  return otherValue;
}
```

### Example of what TO do:
```typescript
if (condition) {
  return value;
}
// No else needed - code naturally continues here
return otherValue;
```

## General Guidelines
- Prefer guard clauses and early returns over nested conditionals
- Reduce indentation levels by returning early when conditions are not met
- Make code more linear and easier to follow by eliminating unnecessary else blocks
